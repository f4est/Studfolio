"""
Django settings for studfolio project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
import dj_database_url
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-REPLACE_WITH_YOUR_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True').lower() == 'true'

ALLOWED_HOSTS = []
# Если определена переменная RENDER_EXTERNAL_HOSTNAME, добавляем ее в ALLOWED_HOSTS
RENDER_EXTERNAL_HOSTNAME = os.getenv('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)

# Добавляем значения из ALLOWED_HOSTS env var
ALLOWED_HOSTS += [host.strip() for host in os.getenv('ALLOWED_HOSTS', '').split(',') if host.strip()]


# Application definition

INSTALLED_APPS = [
    # Модели перевода должны быть загружены до django.contrib.admin
    'modeltranslation',  # Для перевода моделей
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    
    # Third-party apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'crispy_forms',
    'crispy_bootstrap5',
    'sslserver',  # Добавляем django-sslserver
    'rosetta',    # Для интерфейса перевода
    
    # Custom apps
    'users',
    'portfolio',
    'translator',
    'support',
    'language',  # Добавляем наше приложение для управления языками
]

# Crispy Forms settings
CRISPY_TEMPLATE_PACK = 'bootstrap5'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Добавляем для статических файлов на Render
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',  # Перемещаем сюда
    'language.middleware.LanguageMiddleware',  # Наш middleware должен быть после LocaleMiddleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'studfolio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'users.context_processors.placeholder_images',  # Контекст-процессор для заглушек
            ],
        },
    },
]

WSGI_APPLICATION = 'studfolio.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Заменяем конфигурацию БД, если определена переменная DATABASE_URL
DATABASE_URL = os.getenv('DATABASE_URL')
if DATABASE_URL:
    DATABASES['default'] = dj_database_url.config(
        default=DATABASE_URL,
        conn_max_age=600,
        conn_health_checks=True,
    )


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru'

# Доступные языки (только три необходимых)
LANGUAGES = [
    ('ru', 'Русский'),
    ('en', 'English'),
    ('kk', 'Қазақша'),  # Казахский язык
]

TIME_ZONE = 'UTC'

USE_I18N = True

# Директории с файлами локализации
LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

# Настройки для работы с языками через сессии
LANGUAGE_COOKIE_NAME = 'selected_language'  # Имя cookie для хранения языка
LANGUAGE_COOKIE_AGE = 60 * 60 * 24 * 365  # 1 год (в секундах)
LANGUAGE_COOKIE_DOMAIN = None
LANGUAGE_COOKIE_PATH = '/'
LANGUAGE_COOKIE_SECURE = False
LANGUAGE_COOKIE_HTTPONLY = False
LANGUAGE_COOKIE_SAMESITE = None

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Authentication settings
AUTH_USER_MODEL = 'users.CustomUser'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1

# Настройки django-allauth (обновленные)
# Исправление конфликта ACCOUNT_LOGIN_METHODS и ACCOUNT_SIGNUP_FIELDS
ACCOUNT_AUTHENTICATION_METHOD = "username_email"  # Авторизация по имени пользователя или email

# Обязательные поля при регистрации
ACCOUNT_SIGNUP_FIELDS = {
    'username': True,
    'email': True,
    'password': True,
}

# Настройка ограничения попыток входа (замена для ACCOUNT_LOGIN_ATTEMPTS_LIMIT/TIMEOUT)
ACCOUNT_RATE_LIMITS = {
    'login_failed': '5/5m',  # 5 попыток за 5 минут
    # Можно добавить другие ключи, например, 'signup': '10/h'
}

# Поля модели пользователя (allauth обычно определяет их автоматически)
ACCOUNT_USER_MODEL_USERNAME_FIELD = 'username' # По умолчанию 'username'
ACCOUNT_USER_MODEL_EMAIL_FIELD = 'email'       # По умолчанию 'email'

# URL-адреса для перенаправления
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Если вы используете кастомную форму регистрации, укажите ее здесь
ACCOUNT_SIGNUP_FORM_CLASS = None # Например, 'users.forms.CustomSignupForm'

# Email backend для разработки (вывод в консоль)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Настройки для django-modeltranslation
MODELTRANSLATION_DEFAULT_LANGUAGE = 'ru'  # Язык по умолчанию для перевода моделей
MODELTRANSLATION_LANGUAGES = ('ru', 'en', 'kk')  # Языки для перевода
MODELTRANSLATION_FALLBACK_LANGUAGES = ('ru', 'en')  # Запасные языки, если перевод отсутствует

# Настройки для django-rosetta
ROSETTA_SHOW_AT_ADMIN_PANEL = True
ROSETTA_ENABLE_TRANSLATION_SUGGESTIONS = True

# Настройки allauth - ОБНОВЛЕННЫЕ для поддержки двухфакторной аутентификации по желанию пользователя
ACCOUNT_EMAIL_VERIFICATION = "optional"  # Проверка email по желанию пользователя
ACCOUNT_EMAIL_REQUIRED = True  # Email обязателен
ACCOUNT_USERNAME_REQUIRED = True  # Имя пользователя обязательно

# Настройки для кода подтверждения при входе
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True  # Автоматический вход после подтверждения email
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = False  # Не выходить из системы при смене пароля
ACCOUNT_LOGIN_ON_PASSWORD_RESET = True  # Автоматический вход после сброса пароля
ACCOUNT_EMAIL_SUBJECT_PREFIX = ""  # Префикс для темы email

# Дополнительные настройки для упрощения разработки
DEBUG_EMAIL = True  # Выводить email в консоль
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "http"  # Протокол по умолчанию для ссылок в email
SOCIALACCOUNT_AUTO_SIGNUP = True  # Автоматическая регистрация через соцсети

# Лимиты попыток входа
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 300

ACCOUNT_ADAPTER = 'users.adapters.CustomAccountAdapter'  # Кастомный адаптер для allauth
